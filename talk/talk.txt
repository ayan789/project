性能问题
长远考虑 改一次就行，不用每次都改
需求不合理
我的意思是
现在的问题是什么
目的是什么
逻辑不对
理解是
新需求 改动大不大 不大 fix 大 排期
怼之前先确认（不然是自己的问题会很尴尬）
确认码
问题的截图
中规中矩的介绍没有考虑到细节和各种情况

Mapping
follow

共性点
未来类似的情况处理
减少开发的参与
目的是
不可预测的突发问题
把问题提出来 我们来推动
测试数据的准备
账号的准备

宣导
我的理解
推动

ll