package com.ccic.salesapp.noncar.outService.esb.perBaseInfoInquiry.intf;

import com.ccic.salessapp.common.utils.PropertiesUtil;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.2.12
 * 2020-02-27T16:59:11.751+08:00
 * Generated source version: 3.2.12
 *
 */
@WebServiceClient(name = "PerBaseInfoInquiryService",
                  wsdlLocation = "http://10.1.13.183:7001/ecif/services/PerBaseInfoInquiry?wsdl",
                  targetNamespace = "http://service.ccic.com/ecif/perbaseinfoinquiry/intf")
public class PerBaseInfoInquiryService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.ccic.com/ecif/perbaseinfoinquiry/intf", "PerBaseInfoInquiryService");
    public final static QName PerBaseInfoInquiryEndpoint = new QName("http://service.ccic.com/ecif/perbaseinfoinquiry/intf", "PerBaseInfoInquiryEndpoint");
    static {
        URL url = null;
        try {
            String propertiesValue = PropertiesUtil.getProperty("esb.ecif.perBaseInfoInquiry", "");
            url = new URL(propertiesValue);
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PerBaseInfoInquiryService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/E:/IDAESuperSaleApp0218/ccic-salesapp-customer/src/main/java/com/ccic/salesapp/customer/outService/esb/ecif/perBaseInfoInquiry/PerBaseInfoInquiry.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PerBaseInfoInquiryService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PerBaseInfoInquiryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PerBaseInfoInquiryService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public PerBaseInfoInquiryService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public PerBaseInfoInquiryService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public PerBaseInfoInquiryService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns PerBaseInfoInquiry
     */
    @WebEndpoint(name = "PerBaseInfoInquiryEndpoint")
    public PerBaseInfoInquiry getPerBaseInfoInquiryEndpoint() {
        return super.getPort(PerBaseInfoInquiryEndpoint, PerBaseInfoInquiry.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PerBaseInfoInquiry
     */
    @WebEndpoint(name = "PerBaseInfoInquiryEndpoint")
    public PerBaseInfoInquiry getPerBaseInfoInquiryEndpoint(WebServiceFeature... features) {
        return super.getPort(PerBaseInfoInquiryEndpoint, PerBaseInfoInquiry.class, features);
    }

}
