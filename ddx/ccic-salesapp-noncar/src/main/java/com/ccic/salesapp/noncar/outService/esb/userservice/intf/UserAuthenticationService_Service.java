package com.ccic.salesapp.noncar.outService.esb.userservice.intf;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * UserAuthenticationService service = new UserAuthenticationService();
 * UserAuthenticationService portType = service.getUserAuthenticationEndpoint();
 * portType.authenticate(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "UserAuthenticationService", targetNamespace = "http://service.ccic.com/userservice/intf", wsdlLocation = "http://10.1.13.193:15000/UserAuthenticationService?wsdl")
public class UserAuthenticationService_Service extends Service {

	private final static URL USERAUTHENTICATIONSERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(UserAuthenticationService_Service.class
					.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = UserAuthenticationService_Service.class
					.getResource(".");
			url = new URL(baseUrl,
					"http://10.1.13.193:15000/UserAuthenticationService?wsdl");
		} catch (MalformedURLException e) {
			logger
					.warning("Failed to create URL for the wsdl Location: 'http://10.1.13.193:15000/UserAuthenticationService?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		USERAUTHENTICATIONSERVICE_WSDL_LOCATION = url;
	}

	public UserAuthenticationService_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public UserAuthenticationService_Service() {
		super(USERAUTHENTICATIONSERVICE_WSDL_LOCATION, new QName(
				"http://service.ccic.com/userservice/intf",
				"UserAuthenticationService"));
	}

	/**
	 * 
	 * @return returns UserAuthenticationService
	 */
	@WebEndpoint(name = "UserAuthenticationEndpoint")
	public UserAuthenticationService getUserAuthenticationEndpoint() {
		return super.getPort(new QName(
				"http://service.ccic.com/userservice/intf",
				"UserAuthenticationEndpoint"), UserAuthenticationService.class);
	}

}
