初始化仓库 git init
将文件内容添加到索引 git add README.md
将暂存区改动提交到本地版本库 git commit -m "first commit"
本地分支推送到远程分支 push -u origin master
查看分支 git branch
创建新分支testing git branch testing
切换分支 git checkout testing
删除本地分支 git branch -d testing 
删除服务器分支 git push origin -d testing
推送分支 git push origin yan:yan
合并分支（合并完之后要推送） git merge yan (快速前进模式 不会产生新的commitid)
合并分支（合并完之后要推送） git merge --no-ff yan (递归模式 产生新的commitid)

查看文件状态 git status
所有变化文件添加到索引 git add -A
修改和删除文件添加到索引（不包含新文件） git add -u 
修改和新文件添加到索引（不包含删除文件） git add .
查看提交历史 git log
执行 git log --pretty=oneline --graph （查看日志）
查看已选定版本 git show b6b93a05854f2cbc6d375c1544ad6c2432547ebe
暂存 git stash save "暂存"
恢复暂存 git stash pop
查看暂存 git stash list
移除暂存 git stash drop stash@{0}

 add过，没commit
 执行 git reset HEAD .（暂存区回退到工作区）
 执行 git checkout . （重置本地修改的文件）
 add过，commit过
 执行 git log （查看日志）
 执行 git reset --hard 8579ea56f7b1dd9a2bb845b3fd27f9e77340598b （回滚到指定版本）
 执行 git push -f （强制提交到服务器分支）

 合并提交 （本地提交多次，未向服务器提交）
 执行 git log （查看提交历史）
 执行 git rebase -i 3b8e1da69faf7ec10ad38b1d7b8a7112b20dfb65 （压缩合并）
 修改对应提交为squash （向上一次提交合并）
 修改commitMessage内容
 执行 git log （查看提交历史）
 执行 git push origin yan:yan （推送分支）

 删除某次提交 
 执行 git log （查看提交历史）
 执行 git rebase -i 3b8e1da69faf7ec10ad38b1d7b8a7112b20dfb65 （压缩合并）
 修改对应提交为drop （删除这次提交）
 执行 git log （查看提交历史）
 执行 git push origin yan:yan （推送分支）

error: failed to push some refs to(远程库与本地库不一致)
执行git pull --rebase origin yan（远程库同步到本地库）

git勾子函数 自动更新
cd /usr/src/app/
git init --bare test.git 创建git远程仓库
sudo adduser git 添加git用户
sudo passwd git 添加用户密码
sudo chown -R git:git test.git 文件所有权归属当前用户
添加用户ssh免密登录权限 将项目组员的ssh公钥依次存储到 /home/git/.ssh/authorized_keys 文件中
git clone git@server:/usr/src/app/test.git 本地clone远程仓库
server 服务器公网ip
自动化部署
进入 /usr/src/app/test.git 目录下的 hooks 文件夹
vim post-receive
#!/bin/sh
# 删除 GIT_DIR 环境变量，避免干扰
unset GIT_DIR
# 增加生产环境项目路径环境变量
WORKPATH=/usr/share/nginx/test
# 进入生产目录
cd $WORKPATH
cd /opt/un/test/
echo "进入/opt/un/test/目录" > gitlog.txt
git pull origin master
#echo "拉取项目完成" > gitlog.txt
#cp -rf Longm.war /n22/apache-tomcat-7.0.92/webapps/
cd /n22/apache-tomcat-7.0.92/webapps/
#echo "进入/n22/apache-tomcat-7.0.92/webapps/目录" > gitlog.txt
#rm -rf Longm.zip
#echo "删除Longm.zip包" > gitlog.txt
rm -rf Longm
#echo "删除Longm文件夹" > gitlog.txt
cp -rf /opt/un/test/Longm ./
#echo "拷贝新文件zip包" > gitlog.txt
#unzip -o Longm.zip
#echo "解压zip包" > gitlog.txt
#rm -rf Longm.zip
#echo "删除zip包" > gitlog.txt
cd /n22/apache-tomcat-7.0.92/bin/
#echo "进入/n22/apache-tomcat-7.0.92/bin目录" > gitlog.txt
./shutdown.sh
#echo "暂停tomcat" > gitlog.txt
./startup.sh
#echo "启动tomcat" > gitlog.txt
echo 'done!!!'

修改权限
chown -R git:git post-receive
chmod +x post-receive





