<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ccic.salesapp.performance.domain.mapper.SMessageDao">
	<resultMap id="BaseResultMap" type="com.ccic.salesapp.performance.domain.vo.dto.SMessage">
	    <!--
	      WARNING - @mbg.generated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Tue Feb 18 10:57:06 CST 2020.
	    -->
	    <id column="ID" jdbcType="DECIMAL" property="id" />
	    <result column="USERCODE" jdbcType="VARCHAR" property="usercode" />
	    <result column="STATUS" jdbcType="VARCHAR" property="status" />
	    <result column="MESSAGE_TYPE" jdbcType="VARCHAR" property="messageType" />
	    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
	    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
	    <result column="POLICY_NO" jdbcType="VARCHAR" property="policyNo" />
	  </resultMap>
	  
	  <select id="getMessageType" parameterType="com.ccic.salesapp.performance.domain.vo.request.MessageVo" resultType="HashMap">
	  	SELECT MESSAGE_TYPE messageType,count(*) num from t_app_s_message where USERCODE=#{userCode} and status='0' group by MESSAGE_TYPE
	  </select>
	  
	  <select id="getMessageList" parameterType="com.ccic.salesapp.performance.domain.vo.request.MessageVo" resultType="HashMap">
	  	SELECT ID id,USERCODE userCode,`STATUS` `status`,MESSAGE message from t_app_s_message where USERCODE=#{userCode} and MESSAGE_TYPE=#{messageType}
	  </select>
	  
	  
	<select id="get" resultMap="BaseResultMap">
		select `ID`,`USERCODE`,`STATUS`,`MESSAGE`,`MESSAGE_TYPE`,`CREATE_DATE`,`UPDATE_DATE`,`POLICY_NO` from t_app_s_message where ID = #{value}
	</select>

	<select id="list" resultMap="BaseResultMap">
		select `ID`,`USERCODE`,`STATUS`,`MESSAGE`,`MESSAGE_TYPE`,`CREATE_DATE`,`UPDATE_DATE`,`POLICY_NO` from t_app_s_message
        <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="usercode != null and usercode != ''"> and USERCODE = #{usercode} </if>
		  		  <if test="status != null and status != ''"> and STATUS = #{status} </if>
		  		  <if test="message != null and message != ''"> and MESSAGE = #{message} </if>
		  		  <if test="messageType != null and messageType != ''"> and MESSAGE_TYPE = #{messageType} </if>
		  		  <if test="createDate != null and createDate != ''"> and CREATE_DATE = #{createDate} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and UPDATE_DATE = #{updateDate} </if>
		  		  <if test="policyNo != null and policyNo != ''"> and POLICY_NO = #{policyNo} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_app_s_message
		 <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="usercode != null and usercode != ''"> and USERCODE = #{usercode} </if>
		  		  <if test="status != null and status != ''"> and STATUS = #{status} </if>
		  		  <if test="message != null and message != ''"> and MESSAGE = #{message} </if>
		  		  <if test="messageType != null and messageType != ''"> and MESSAGE_TYPE = #{messageType} </if>
		  		  <if test="createDate != null and createDate != ''"> and CREATE_DATE = #{createDate} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and UPDATE_DATE = #{updateDate} </if>
		  		  <if test="policyNo != null and policyNo != ''"> and POLICY_NO = #{policyNo} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.ccic.salesapp.performance.domain.vo.dto.SMessage">
		insert into t_app_s_message
		(
			`ID`, 
			`USERCODE`, 
			`STATUS`, 
			`MESSAGE`, 
			`MESSAGE_TYPE`, 
			`CREATE_DATE`, 
			`UPDATE_DATE`, 
			`POLICY_NO`
		)
		values
		(
			#{id}, 
			#{usercode}, 
			#{status}, 
			#{message}, 
			#{messageType}, 
			#{createDate}, 
			#{updateDate}, 
			#{policyNo}
		)
	</insert>
	 
	<update id="update" parameterType="com.ccic.salesapp.performance.domain.vo.dto.SMessage">
		update t_app_s_message 
		<set>
			<if test="usercode != null">`USERCODE` = #{usercode}, </if>
			<if test="status != null">`STATUS` = #{status}, </if>
			<if test="message != null">`MESSAGE` = #{message}, </if>
			<if test="messageType != null">`MESSAGE_TYPE` = #{messageType}, </if>
			<if test="createDate != null">`CREATE_DATE` = #{createDate}, </if>
			<if test="updateDate != null">`UPDATE_DATE` = #{updateDate}, </if>
			<if test="policyNo != null">`POLICY_NO` = #{policyNo}</if>
		</set>
		where ID = #{id}
	</update>
	
	<delete id="remove">
		delete from t_app_s_message where ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_app_s_message where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>